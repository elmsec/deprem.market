version: '3.7'

services:
  api:
    image: depremmarket/api:latest
    build: ./api
    command: './wait-for.sh postgres:5432 -- ./wait-for.sh redis:6379 -- python manage.py runserver 0.0.0.0:8000'
    volumes:
      - ./api:/usr/src/depremmarket
      - static_volume:/usr/src/depremmarket/staticfiles
      - media_volume:/usr/src/depremmarket/media
    env_file:
      - ./.env
    depends_on:
      - postgres
      - redis
    networks:
      - main
    restart: on-failure

  # celery_worker:
  #   build: ./api
  #   command: './wait-for.sh redis:6379 -- python manage.py celery'
  #   depends_on:
  #     - postgres
  #     - redis
  #     - api
  #   hostname: celery_worker
  #   entrypoint: '' # remove entrypoint of the backend
  #   volumes:
  #     - ./api/:/usr/src/depremmarket/
  #     - static_volume:/usr/src/depremmarket/staticfiles
  #     - media_volume:/usr/src/depremmarket/media
  #   env_file:
  #     - ./.env
  #   networks:
  #     - main
  #   restart: on-failure

  postgres:
    image: postgres:13.2-alpine
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=depremmarket
      - POSTGRES_PASSWORD=depremmarket
      - POSTGRES_DB=depremmarket_dev
    networks:
      - main
    restart: on-failure

  redis:
    image: redis:latest
    command: redis-server --requirepass $REDIS_PASSWORD
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    networks:
      - main
    restart: on-failure
    env_file: ./.env

  # rabbitmq:
  #   hostname: rabbitmq
  #   image: rabbitmq:latest
  #   volumes:
  #     - rabbitmq_data
  #   networks:
  #     - main
  #   ports:
  #     - 5672:5672
  #   restart: on-failure
  #   logging:
  #     driver: none

  nginx:
    image: nginx:alpine
    ports:
      - 8000:80
      # - 8000:443
    volumes:
      - static_volume:/staticfiles/
      - media_volume:/media/
      - ./nginx/dev.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl/:/etc/nginx/ssl/:ro
      - ./nginx/html/:/etc/nginx/html/:ro
    depends_on:
      - api
    networks:
      - main

networks:
  main:

volumes:
  redis_data:
  # rabbitmq_data:
  postgres_dev_data:
  static_volume:
  media_volume:
